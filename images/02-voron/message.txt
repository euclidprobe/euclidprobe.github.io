[virtual_sdcard]
[display_status]
[pause_resume]
[virtual_sdcard]
path: ~/gcode_files
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE


[safe_z_home]
home_xy_position: 93, -7
#   A X, Y coordinate (e.g. 100, 100) where the Z homing should be
#   performed. This parameter must be provided.
speed: 50.0
#   Speed at which the toolhead is moved to the safe Z home
#   coordinate. The default is 50 mm/s
z_hop: 5
#   Distance (in mm) to lift the Z axis prior to homing. This is
#   applied to any homing command, even if it doesn't home the Z axis.
#   If the Z axis is already homed and the current Z position is less
#   than z_hop, then this will lift the head to a height of z_hop. If
#   the Z axis is not already homed the head is lifted by z_hop.
#   The default is to not implement Z hop.
z_hop_speed: 20.0
#   Speed (in mm/s) at which the Z axis is lifted prior to homing. The
#   default is 20mm/s.
move_to_previous: False
#   When set to True, the X and Y axes are reset to their previous
#   positions after Z axis homing. The default is False.




##Euclid macros
# Macro to Deploy Bed Probe
[gcode_macro M401]
gcode:
    G90
    {action_respond_info("Entering M401")}
    error_if_probe_deployed    ; check to make sure that the probe is not already attached
    _M401

[gcode_macro error_if_probe_deployed]
gcode:
    QUERY_PROBE                 ; check probe status
    do_error_if_probe_deployed  ; logic check to verify probe is not already deployed

[gcode_macro do_error_if_probe_deployed]
gcode:
    {% if not printer.probe.last_query %}
      {action_raise_error("Euclid Probe is already deployed - Remove and Return it to the dock")}
    {% endif %}

# Macro to Deploy Bed Probe
[gcode_macro _M401]
gcode:
    G90
    {% if printer.probe.last_query %} 
      G0 Z15 F3000         ;  set approach elevation of Z15 to clear probe over bed on fixed gantry machine
      #                       for moving gantry machine this may need to be adjusted
      G0 X277 Y20           ;  move the carraige to safe position to move from
      G0 X277 Y15            ;  move to the side of the dock
      G4 P250              ;  wait 1/4 second 
      G0 X277 Y-7             ;  move sideways over the dock to pick up probe
      G0 Z1
      M400                 ;  wait for moves to finish
      G4 P250              ;  pause 1/4 sec for detection
      G0 X245 Y-7            ;  move out of the dock in a straight line 
      G0 Z15               ;  move up to clear the probe over the bed of moving gantry or provide clearance for fixed gantry
      G0 X150 Y150         ;  move probe to center of bed in ready position 
    {% endif %}
    error_if_probe_not_deployed
    {action_respond_info("Exiting M401")}

[gcode_macro error_if_probe_not_deployed]
gcode:
    QUERY_PROBE
    do_error_if_probe_not_deployed

[gcode_macro do_error_if_probe_not_deployed]
gcode:
    {% if printer.probe.last_query %}
      {action_raise_error("Euclid Probe failed to deploy!")}
    {% endif %}

# Macro to retract Bed Probe
[gcode_macro M402]
gcode:
    G90
    {action_respond_info("Entering M402")}
    error_if_probe_not_deployed
    _M402

# Macro to Stow Bed Leveling Probe
[gcode_macro _M402]
gcode:
    G90
    {% if not printer.probe.last_query %} ; the logic on this needs function check
      G0 Z15 F2400                  ;  set approach elevation of Z15 for fixed gantry system to clear probe over bed
      #                             ;  for moving gantry system this may have to be altered to match your dock elevation
      G0 X150 Y150 F3000            ;  start movements at center of the bed 
      G0 X245 Y15 F3000               ;  move to the re-entry staging position
      G0 X245 Y-7 F3000               ;  move to a position in front of the dock so simple linear movement into dock 
      G0 Z1 F200                        ; move z down
      G0 X277 Y-7 F240                 ;  slowly move into dock 
      M400                          ;  wait for moves to finish
      G4 P250                       ;  forced pause here so motion is definite 90 tavel to swipe
      G0 X277 Y25 Z5 F3000               ;  quick swipe off 
      G0 X150 Y0                    ;  move to front center of bed                   
      G0 Z20 F500                   ;  move up to elevation of Z20
    {% endif %}                     ;  exit the if-then loop. was missing in previous versions
    error_if_probe_deployed         ;  verify that the probe is detached. is corrected error  
    {action_respond_info("Exiting M402")}



# Macro to perform a bed mesh calibration by wrapping it between M401/M402 macros
#[gcode_macro BED_MESH_CALIBRATE]
#gcode:
 # M401                           ; deploy Euclid Probe if needed
 # BED_MESH_CALIBRATE_ORIGINAL    ; check bed level
 # M402                           ; dock Euclid Probe

